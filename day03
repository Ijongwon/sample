### day03


**A07CharacterTest
	- 문자형 char 데이터와 변수 
	- 아스키 코드와 유니코드
	- char 과 int 의 캐스팅(타입 변환)
**A08AlphabaetPrint
	- 증감(단항)연산자
	- char에 대해 증감연산자 사용	-> int타입으로 변환하는 캐스팅이 필요없음
	
**A09PrefixPostfixTest
	- 증감연산자가 다른 명령문과 전치 또는 후치로 사용 될때
	
**A10IfTest
	- if 문 형식 : if 또는 if~els
	- if 문의 조건식은 결과값이 boolean 형식이어야 한다.
**A11KeyinputTest
	- 데이터 생성을 키보드 입력으로 해보기
	- Scanner sc = new Scanner(System.in); 과 sc.nextInt();
	- System.in 은 표준입력. System.out 은 표준 출력 -> console 입출력
	
**A12KeyinputExam
	- 키보드 입력 연습 예제

###

* 리터럴과 데이터 형식
	- 리터럴은 값 그 자체, 데이터 형식에 따라 표시하는 방법이 다르다.
		- 1234 는 int 정수, 메모리 크기는 4바이트
		- 1234L 은 long 정수, 메모리 크기는 8바이트
		- 3.1419 는 double 실수, 메모리크기는 8바이트(값의 표현범위, 소수점 이하 자리수 차이)
		- 3.1419F 는 float 실수, 메모리크기는 4바이트
		- true 또는 false 2가지로 표시하는 boolean 논리형, 1바이트
		- 원시 타입은 아니지만 다른 프로그래밍 언어에서는 기본 형식으로 사용하는 "java","1234"는 문자열 -> 메모리 크기는 문자열 안에 문자의 갯수에 따라 할당.,
* char 문자 데이터
	- 문자는 정수값을 코드로 갖습니다. 그 값으로 0 또는 1로 표현 된다.
	- ASCII 코드는 128개의 기본 문자만 표현합니다.
	- 유니코드는 웹 환경이 발전하면서 다국어 문자를 표현하기 위한 표준으로 사용 한다.
	- char은 2바이트를 사용해서 유니코드(unicode) 형식으로 표현한다.
	- 아스키코드 128개에 포함된 문자는 유니코드와 같은 값을 가진다.
	
* 연산자 연산자의 종류에 따른 우선 순위 : 여러 종류의 연산자가 있을 때 실행 순서.
	우선순위		종류				연산자
		1	1차연산자				()
		2	단항연산자 			-, ++(변수 앞에 있을때), --(전치 : 변수 앞에 있을 때)
		3	산술연산자				*, /, %(정수 나눗셈의 나머지)
		4 	산술연산자				+,-
		5	비트이동(shift 연산)	<<, >>, >>>
		6	관계연산자				<, <=, >=, ==(같다), !=(같지않다)
		7	비트논리				&, |, ^, ~
		8	논리연산				&& (그리고.AND)
		9	논리연산				|| (또는.OR)
		10	조건연산자(삼향연산)		?:
		11	대입연산				=, +=, -=, *=, /=, %/ 등등 다른 연산자를 축약가능.
** if 조건문
	- 조건문은 데이터를 검사하는 조건식이 필요하다.
	- 조건식 결과는 참 true 또는 거짓 false이다.
	- 관계연산과 논리연산으로 조건식을 작성한다.
		- 형식 1 : if(조건식){ 참일때 실행하는 명령문들...}
		- 형식 2 : if(조건식){ 참일때 실애항하는 명령문들...} else { 조건식이 거짓일 때 실행하는 명령문들...}  -> else에는 조건식이 들어가지 않음
			* else에 형식 1 또는 2 가 중첩되어 사용할 수 있습니다.
				- if(조건식1) ~ else if(조건식2) ~ ... 

			
			

			
			
			
			